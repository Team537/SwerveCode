#include "Schematic.h"
#include "SwerveModule.h"
#include "cmath"

void SwerveModule::Initialize()
{
	SmartDashboard::PutData("Speed Victor", SpeedOutput);
}

void SwerveModule::drive(float angle, float speed)
{
	if (fabs(angle) < JOYDEADBAND)
	{
		angle = 0;
	}

	if (fabs(speed) < JOYDEADBAND)
	{
		speed = 0;
	}
	
	AngleOutput->Set(angle);
	SpeedOutput->Set(speed);
	
	SmartDashboard::PutNumber("Encoder", SpeedEncoder->GetRate());
	SmartDashboard::PutNumber("Potentiometer", AnglePotentiometer->GetValue());
	SmartDashboard::PutNumber("Angle IO",angle);
	SmartDashboard::PutNumber("Speed IO",speed);
}

void SwerveModule::Range()
{
	AngleOutput->Set(.5);
	double potfeedback = AnglePotentiometer->GetValue();
	if (potfeedback >= potfeedbackmax){
		potfeedbackmax = potfeedback;
		}
	if (potfeedback <= Potfeedbackmin){
		Potfeedbackmin = potfeedback;
		}
	SmartDashboard::PutNumber("max pot", FLpotfeedbackmax);
	SmartDashboard::PutNumber("min pot", FLPotfeedbackmin);
	SmartDashboard::PutNumber("Potval", FLpotfeedback);
	SmartDashboard::PutNumber("Pot volts", FRPot.GetVoltage());
}

