#ifndef SWERVEMODULE_H
#define SWERVEMODULE_H
#include "schematic.h"
#include <wpilib.h>

class SwerveModule
{
private:
	Victor *SpeedOutput, *AngleOutput;
	Encoder *SpeedEncoder;
	AnalogChannel *AnglePotentiometer;
	double potfeedbackmin, potfeedbackmax;
	PIDController *PIDAngle;
public:
	SwerveModule(uint32_t SpeedPort, uint32_t AngPort, uint32_t EncPort1, uint32_t EncPort2,uint32_t PotPort, float AngleP, float AngleI,float AngleD)
	{
		SpeedOutput = new Victor(SpeedPort);
		SpeedEncoder = new Encoder(EncPort1,EncPort2);
		AngleOutput = new Victor(AngPort);
		AnglePotentiometer = new AnalogChannel(PotPort);
		PIDAngle = new PIDController(AngleP,AngleI,AngleD,AnglePotentiometer,AngleOutput);
		potfeedbackmin = 100;
		
	}
	void Initialize();
	void drive(float angle,float speed);
	void AutoDrive(float Angle);
};
#endif
